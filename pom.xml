<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<!-- The Basics -->
	<groupId>com.mobepic</groupId>
	<artifactId>js-graph.io</artifactId>
	<version>1.0-SNAPSHOT</version>

	<packaging>war</packaging>

	<name>{$applicationName}</name>
	<dependencies>
		<!--
		jars from GAE's "lib/user" must be added as compile-time dependencies,
		as described here in "Copying JARs" section:
		http://code.google.com/appengine/docs/java/tools/ant.html
		-->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-1.0-sdk</artifactId>
			<version>${gae.version}</version>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-jsr107cache</artifactId>
			<version>${gae.version}</version>
		</dependency>

		<dependency>
			<groupId>net.sf.jsr107cache</groupId>
			<artifactId>jsr107cache</artifactId>
			<version>1.1</version>
		</dependency>

		<!--
		J2EE Servlet API.
		-->
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-servlet_2.5_spec</artifactId>
			<version>1.2</version>
			<scope>provided</scope>
		</dependency>

		<!--
		GAE libraries for local testing as described here:
		http://code.google.com/appengine/docs/java/howto/unittesting.html
		-->
		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-labs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-api-stubs</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.appengine</groupId>
			<artifactId>appengine-testing</artifactId>
			<version>${gae.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<extensions>
			<extension>
				<groupId>org.apache.maven.archetype</groupId>
				<artifactId>archetype-packaging</artifactId>
				<version>2.0-alpha-5</version>
			</extension>
		</extensions>

		<plugins>
			<plugin>
				<artifactId>maven-archetype-plugin</artifactId>
				<version>2.0-alpha-4</version>
				<extensions>true</extensions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-beta-1</version>
				<configuration>
					<webResources>
						<resource>
							<directory>src</directory>
							<filtering>true</filtering>
							<includes>
								<include>appengine-web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!--
			The actual maven-gae-plugin. Type "mvn gae:run" to run project,
			"mvn gae:deploy" to upload to GAE.
			-->
			<plugin>
				<groupId>net.kindleit</groupId>
				<artifactId>maven-gae-plugin</artifactId>
				<version>${gaePluginVersion}</version>
			</plugin>

			<!--
			Upload application to the appspot automatically, during
			release:perform.
			-->
			<plugin>
				<artifactId>maven-release-plugin</artifactId>
				<configuration>
					<goals>gae:deploy</goals>
				</configuration>
			</plugin>

			<!--
			Java compiler version
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- support for less css -->
			<plugin>
				<groupId>org.lesscss</groupId>
				<artifactId>lesscss-maven-plugin</artifactId>
				<version>1.3.0</version>
				<configuration>
					<sourceDirectory>${project.basedir}/src/main/webapp/less</sourceDirectory>
					<outputDirectory>${project.build.directory}/${project.build.finalName}/css</outputDirectory>
					<compress>true</compress>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!--
	Specify hard-coded project properties here.
	-->
	<properties>

		<!-- Sets the project's default encoding.
		 http://docs.codehaus.org/display/MAVENUSER/POM+Element+for+Source+File+Encoding -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!--
		This is just for "eclipse:eclipse" goal to always attempt downloading
		sources.
		-->
		<downloadSources>true</downloadSources>

		<gae.home>/Users/tjerk/Development/tools/appengine-java-sdk-1.7.3</gae.home>

		<!--
		Specify AppEngine version for your project. It should match
		SDK version pointed to by ${gae.home} property (Typically, one used by your
		Eclipse plug-in).
		-->
		<gae.version>1.7.3</gae.version>
		<gaePluginVersion>0.7.1</gaePluginVersion>

		<applicationName>3dweapons-server</applicationName>

		<!--
		Upload to http://test.latest.<applicationName>.appspot.com by
		default.
		-->
		<gae.application.version>test</gae.application.version>
	</properties>

	<profiles>
		<!--
		We can configure our integration server to activate this profile
		and perform gae:deploy, thus uploading latest snapshot to the
		http://1.latest.<applicationName>.appspot.com automatically.
		-->
		<profile>
			<id>integration-build</id>
			<properties>
				<gae.application.version>stage</gae.application.version>
			</properties>
		</profile>

		<!--
		This profile will activate automatically during release and
		upload application to the http://2.latest.<applicationName>.appspot.com (We
		might want to set the 2nd version as our applications Default version to
		be accessible at http://<applicationName>.appspot.com).
		-->
		<profile>
			<id>release-build</id>
			<activation>
				<property>
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<!--
				During release, set application version in appengine-web.xml
				to 2.
				-->
				<gae.application.version>release</gae.application.version>
			</properties>
		</profile>
	</profiles>

</project>
